* {
  box-sizing: border-box;
}

/* centers body */
body {
  background: #14233a url('./images/calm.jpeg') no-repeat center center/cover;
  color: #fff;
  font-family: 'Montserrat', sans-serif;
  min-height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0;
}

h1 {
    margin-top: 50px;
    margin-bottom: 50px;
}

button {
    background-color: #14233a;
    color: #fff;
    font-family: 'Montserrat', sans-serif;
    border-radius: 5px;
    margin: 2px;
}

.timer {
    align-items: center;
    justify-content: center;
    display: contents;
}

/* centers container within body */
.container {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 250px;
    width: 250px;
    margin: auto;
    position: relative;
    transform: scale(1);
}

/* circle split into 3 colors*/
.gradient-circle {
    background: conic-gradient(
        #5593b7 0%,
        #5e9bec 40%,
        #fff 40%,
        #fff 60%,
        #33406d 60%,
        #4462b3 100%
    );
    height: 270px;
    width: 270px;
    position: absolute;
    /* moved over slightly so solid circle doesn't hide it */
    top: -10px;
    left: -10px;
    /* sends conic-gradient circle behind solid circle */
    z-index: -2;
    border-radius: 50%;
}

/* solid circle that goes in front of the conic-gradient circle */
.circle {
    background-color: #14233a;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    /* sends circle infront of conic-gradient circle */
    z-index: -1;
    border-radius: 50%;
}

/* perimeters that pointer can move / how long it moves */
.pointer-container {
    position: absolute;
    top: -40px;
    left: 110px;
    width: 20px;
    height: 170px;
    /* background: orange; */
    animation: rotate 7.5s linear forwards infinite;
    transform-origin: bottom center;
}

/* white ball that follows the conic-gradient circle outline */
.pointer {
    background-color: white;
    border-radius: 50%;
    height: 20px;
    width: 20px;
}

/* grow keyframe animation starts when class changes due to js file */
/* .pointer-container.rotate {
    animation: rotate 7.5s linear forwards;
} */

/* grow keyframe animation starts when class changes due to js file */
.container.grow {
    animation: grow 3s linear forwards;
}

/* shrink keyframe animation starts when class changes due to js file */
.container.shrink {
    animation: shrink 3s linear forwards;
}

/* rotate animation for the pointer */
@keyframes rotate {
    from{
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/* grow animation for the circle */
@keyframes grow {
    from{
        transform: scale(1);
    }

    to {
        transform: scale(1.2);
    }
}

/* shrink animation for the circle */
@keyframes shrink {
    from{
        transform: scale(1.2);
    }

    to {
        transform: scale(1);
    }
}